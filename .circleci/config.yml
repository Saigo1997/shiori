version: 2.1
orbs:
  heroku: circleci/heroku@1.0.1
commands:
  login:
    steps:
    - run: heroku container:login
  push:
    parameters:
      app-name:
        type: string
      process-types:
        default: web
        type: string
    steps:
    - run: heroku container:push <<parameters.process-types>> --app <<parameters.app-name>> --arg ARG_RAILS_MASTER_KEY=${ARG_RAILS_MASTER_KEY},ARG_DATABASE_PASSWORD=${ARG_DATABASE_PASSWORD}

  release:
    parameters:
      app-name:
        type: string
      process-types:
        default: web
        type: string
    steps:
    - run: heroku container:release <<parameters.process-types>> --app <<parameters.app-name>>

jobs:
  test:
    docker:
      - image: circleci/ruby:2.7.5-node-browsers
        environment:
          RAILS_ENV: test
          DATABASE_HOST: 127.0.0.1
          DATABASE_USER: 'root'
          DATABASE_PASSWORD: ''
          DATABASE_PORT: 3306
      - image: circleci/mysql:8.0.18-ram
        command: |
          mysqld --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_DATABASE: shiori_test
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_HOST: '%'
    working_directory: ~/shiori
    steps:
      - checkout
      # bundle
      - restore_cache:
          keys:
            - v3-bundle-{{ checksum "Gemfile.lock" }}
            - v3-bundle-
      - run:
          name: bundle install
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - ./vendor/bundle
          key: v3-bundle-{{ checksum "Gemfile.lock" }}
      # yarn
      - restore_cache:
          keys:
            - v3-yarn-{{ checksum "yarn.lock" }}
            - v3-yarn-
      - run:
          name: yarn install
          command: yarn install
      - save_cache:
          paths:
            - ./node_modules
          key: v3-yarn-{{ checksum "yarn.lock" }}
      # Database setup
      - run: rm ./config/database.yml
      - run: mv ./config/database.yml.ci ./config/database.yml
      - run:
          name: Prepare db
          command: |
            bundle exec rake db:create db:schema:load --trace
      - run:
          name: Compile assets
          command: RAILS_MASTER_KEY=${RAILS_MASTER_KEY} bundle exec rake assets:precompile
      # Rubocop
      - run:
          name: Rubocop
          command: bundle exec rubocop
      # run tests!
      - run:
          name: Run rspec
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            bundle exec rspec --format progress --color --format documentation
      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
  push-and-release:
    executor: heroku/default
    parameters:
      app-name:
        type: string
    steps:
    - checkout
    - heroku/install
    - setup_remote_docker:
        version: 18.09.3
    - login
    - push:
        app-name: <<parameters.app-name>>
        process-types: web
    - release:
        app-name: <<parameters.app-name>>
        process-types: web

workflows:
  production_release:
    jobs:
      - test:
          filters:
            branches:
              only:
                - main
      - push-and-release:
          requires:
            - test
          app-name: ${HEROKU_APP_NAME}
  staging_release:
    jobs:
      - test:
          filters:
            branches:
              only:
                - develop
      - push-and-release:
          requires:
            - test
          app-name: ${HEROKU_APP_NAME_STAGING}
  test:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - main
                - develop
